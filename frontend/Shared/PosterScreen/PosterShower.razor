@inject AppState AppState

<div class="posterContainer">
  <BasicInfo />
  <div class="imgContainer">
    <img class="poster" src="@imageSource">
  </div>
</div>

@code
{
  System.Timers.Timer ImageTimer;
  int currentPictureNumber = 0;

  IReadOnlyList<CPoster> Posters;

  string imageSource { get => Posters[currentPictureNumber].Url; }

  void nextPic(Object source, System.Timers.ElapsedEventArgs e)
  {
    if (currentPictureNumber < (Posters.Count - 1)) currentPictureNumber += 1;
    else currentPictureNumber = 0;
    InvokeAsync(StateHasChanged);
  }

  protected override void OnAfterRender(bool firstRender)
  {
    if (firstRender)
    {
      ImageTimer = new System.Timers.Timer(4000);
      ImageTimer.Elapsed += nextPic;
      ImageTimer.AutoReset = true;
      ImageTimer.Start();
    }

  }

  protected override void OnInitialized()
  {
    Posters = AppState.Posters;
  }
}