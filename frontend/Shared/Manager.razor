@using MudBlazor


@* this only works in 6.0 *@
@* @typeparam TManageable where TManageable : IManageable *@

@* but for now this will work with a partial class *@
@typeparam TManageable

<MudContainer>
    <MudGrid Justify="Justify.Center">
        <MudItem>
            <MudTable Items="@_manageables">
                <HeaderContent>
                    @foreach (string header in _manageables?[0].TableHeader)
                    {
                        <MudTh>@header</MudTh>
                    }
                </HeaderContent>
                <RowTemplate>
                    @* // FIXME this is a bad way to do this *@
                    @foreach (string MudTableDateName in _manageables?[0].MudTableDataNames)
                    {
                        <MudTh>@context[MudTableDateName]</MudTh>
                    }
                </RowTemplate>
            </MudTable>
        </MudItem>

        <MudItem>

        </MudItem>
    </MudGrid>
</MudContainer>

@code
{
    // TODO IManageable should be TManageable, but this is easier for construction
    private List<IManageable> _manageables = new List<IManageable>();

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        GetManageables();
    }

    private void GetManageables()
    {
        _manageables.Add(new Poster("Poster 1", "Casper", "AAU"));
        _manageables.Add(new Poster("Poster 2", "MÃ¸ller", "AAU"));
        _manageables.Add(new Poster("Poster 3", "Mads", "AAU"));
    }




}