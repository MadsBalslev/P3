@using MudBlazor
@typeparam T
@inherits MudTable<T>
@using System.Reflection

<MudContainer>
    <MudGrid Justify="Justify.Center">
        <MudItem>
            <MudTable Items="@ItemList">
                <HeaderContent>
                    @HeaderContent
                </HeaderContent>
                <RowTemplate>
                    @foreach (PropertyInfo propertyInfo in ItemList?[0].GetType().GetProperties(BindingFlags.Public |
                    BindingFlags.Instance))
                    {
                        Attribute attribute = propertyInfo.GetCustomAttribute(typeof(AccessLevelAttribute), true);
                        if (attribute is AccessLevelAttribute)
                        {
                            AccessLevelAttribute accessAttribute = attribute as AccessLevelAttribute;
                            if (_userAccessLevel >= accessAttribute.AccessLevel)
                            {
                                MethodInfo getter = propertyInfo.GetGetMethod();
                                <MudTd>@typeof(Poster).GetProperty(propertyInfo.Name).GetValue(context, null)</MudTd>
                            }
                        }
                    }
                </RowTemplate>
            </MudTable>
        </MudItem>
        <MudItem>
            <MudForm>
                @MudForm
            </MudForm>
        </MudItem>
    </MudGrid>
</MudContainer>

@code
{

    private AccessLevel _userAccessLevel { get; set; } = AccessLevel.SysAdmin;

    [Parameter]
    public List<Poster> ItemList { get; set; } = new List<Poster>();

    [Parameter]
    public RenderFragment MudForm { get; set; }

    protected override void OnInitialized()
    {
        ItemList.Add(new Poster("Poser 1", "Casper", "AAU"));
        ItemList.Add(new Poster("Poser 2", "MÃ¸ller", "AKU"));
        ItemList.Add(new Poster("Poser 3", "Mads", "KRJL"));
    }
    @*
        private async Task<List<T>> GetItems()
        {


        }

        private Task<List<T>> PostItem()
        {

        }

        private PutItem()
        {

        }

        private void DeleteItem()
        {

        } *@

}