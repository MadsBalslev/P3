@using MudBlazor
@using Shared.Manager
@using Microsoft.AspNetCore.Components.Forms
@using System.IO
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Logging
@inject ISnackbar _snackbar
@inject ILogger<PosterCreateForm> Logger
@inject IWebHostEnvironment Environment
@inherits CreateForm<Poster>

<MudForm @ref="_form">
    <MudCard>
        <MudCardContent>
            <MudTextField Required="@true" FullWidth="true" @bind-Value="_precreateItem.name"
                Label="Poster name" />
            <MudDatePicker Required="@true" MinDate="DateTime.Now" MaxDate="_precreateItem.endDate"
                ShowWeekNumbers="true" Label="Start date" @bind-Date="_precreateItem.startDate"
                DateFormat="dd/MM/yyyy" />
            <MudDatePicker Required="@true" MinDate="_precreateItem.startDate"
                ShowWeekNumbers="true" Label="End date" @bind-Date="_precreateItem.endDate"
                DateFormat="dd/MM/yyyy" />
            <MudTextField Required="@true" FullWidth="true" @bind-Value="_precreateItem.image"
                Label="Image url" />
            <InputFile id="fileInput" type="file" OnChange="@posterFile"
                accept=".jpg, .jpeg, .png" />
            <MudCardActions>
                <MudButton Variant="Variant.Filled" HtmlTag="label"
                    StartIcon="@Icons.Filled.CloudUpload" for="fileInput" FullWidth="true">
                    Upload poster</MudButton>
            </MudCardActions>
            <MudCardActions>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="OnAddItem"
                    FullWidth="true">Add
                    Poster</MudButton>
            </MudCardActions>
            <MudCardActions>
                <MudButton FullWidth="true" @onclick="OnCancel" Variant="Variant.Filled"
                    Color="Color.Warning">Cancel
                </MudButton>
            </MudCardActions>
        </MudCardContent>
    </MudCard>
</MudForm>

@code
{
    // Max files size for uploading files in bytes. 1 000 000 bytes = 1mb
    private long _maxFileSize = 3000000;

    private async Task posterFile(InputFileChangeEventArgs e)
    {
        try
        {
            IBrowserFile _loadedFile = e.File;
            if (_loadedFile.Size < _maxFileSize)
            {
                string trustedFileNameForFileStorage = Path.GetRandomFileName();

                @*//TODO Give the correct name for EnvironmentName*@
                string path = Path.Combine(Environment.ContentRootPath, Environment.EnvironmentName,
                                "unsafe_uploads", trustedFileNameForFileStorage);

                await using FileStream fs = new(path, FileMode.Create);
                await _loadedFile.OpenReadStream(_maxFileSize).CopyToAsync(fs);

                _snackbar.Add($"File was successfully uploaded", Severity.Success);
            }
            else
            {
                _snackbar.Add($"Your file is too large, (Maximum 3MB)", Severity.Warning);
                _loadedFile = null;
            }

        }
        catch (Exception ex)
        {
            _snackbar.Add($"Something went't wrong {ex.ToString()}", Severity.Success);
        }
    }
}k