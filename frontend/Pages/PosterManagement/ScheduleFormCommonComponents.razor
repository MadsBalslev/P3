@using MudBlazor
@using Shared.Manager
@inherits ApiComponent

<MudTextField Required="@true" FullWidth="true" @bind-Value="Schedule.name" Label="Schedule Name" />
<MudDatePicker Required="@true" ShowWeekNumbers="true" Label="Start date" MinDate="DateTime.Now"
    MaxDate="Schedule.endDate" @bind-Date="Schedule.startDate" DateFormat="dd/MM/yyyy" />
<MudDatePicker Required="@true" ShowWeekNumbers="true" Label="End date" MinDate="Schedule.startDate"
    @bind-Date="Schedule.endDate" DateFormat="dd/MM/yyyy" />

<MudSelect  @bind-value="Schedule.posterId" Required="true" T="int?" Placeholder="Select what poster to schedule...">
    @foreach (Poster poster in _posters)
    {
        <MudSelectItem Value="@(poster.id)">@poster.name @poster.id</MudSelectItem>
    }
</MudSelect>

@* <MudGrid Justify="Justify.SpaceEvenly">
    <MudItem xs="12">
    <div class = "d-flex flex-row">
    <MudCheckBox Required="@true" @bind-Checked="Schedule.weekday" Label="Monday" Spacing="12"></MudCheckBox>
    <MudCheckBox Required="@true" @bind-Checked="Schedule.daily" Label="Tuesday" Spacing="1"></MudCheckBox>
    </div>
    <div class = "d-flex flex-row">
    <MudCheckBox Required="@true" @bind-Checked="Schedule.daily" Label="Wednesday" Spacing="2"></MudCheckBox>
    <MudCheckBox Required="@true" @bind-Checked="Schedule.daily" Label="Thursday" Spacing="3"></MudCheckBox>
    </div>
    <div class = "d-flex flex-row">
    <MudCheckBox Required="@true" @bind-Checked="Schedule.daily" Label="Friday" Spacing="@spacing"></MudCheckBox>
    <MudCheckBox Required="@true" @bind-Checked="Schedule.daily" Label="Saturday" Spacing="@spacing"></MudCheckBox>
    <MudCheckBox Required="@true" @bind-Checked="Schedule.daily" Label="Sunday" Spacing="@spacing"></MudCheckBox>
    </div>
    </MudItem>
    </MudGrid> *@
@*<MudTextField Required="@true" FullWidth="true" @bind-Value="Poster.image"
    Label="Image url" />*@

@code
{

    private List<Poster> _posters = new List<Poster>();



    // Weekday
    // "{Man, Tir, Ons, Tor, Fre, Lør, Søn}"
    // ---> "{0, 0, 0, 0, 0, 0, 0}"

    [Parameter]
    public Schedule Schedule { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _posters = await RequestHandler<Poster, List<Poster>>(HttpMethod.Get, "/Posters");
    }

}