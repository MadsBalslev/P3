@page "/UserManagement"
@using frontend.Shared.Manager
@using MudBlazor
@inject ICurrentUserService CurrentUserService

<Manager T="@User" ApiPath="/Users" Context="user" Filter="FilterFunc">
    <HeaderContent>
        @if (AccessLevel.SysAdmin <= CurrentUserService.User.AccessLevel)
        {
            <MudTh>
                <MudTableSortLabel T=@User SortBy="(x) => x.id">ID</MudTableSortLabel>
            </MudTh>
        }
        <MudTh>
            <MudTableSortLabel T=@User SortBy="(x) => x.firstName">First name
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel T=@User SortBy="(x) => x.lastName">Last name</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel T=@User SortBy="(x) => x.role">Role
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel T=@User SortBy="(x) => x.email">Email Address</MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel T=@User SortBy="(x) => x.phoneNumber">Phone number
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel T=@User SortBy="(x) => x.institution.name">Institution
            </MudTableSortLabel>
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        @if (AccessLevel.SysAdmin <= CurrentUserService.User.AccessLevel)
        {
            <MudTd>@user.id</MudTd>
        }
        <MudTd>@user.firstName</MudTd>
        <MudTd>@user.lastName</MudTd>
        <MudTd>@user.RoleAsString</MudTd>
        <MudTd>@user.email</MudTd>
        <MudTd>@user.phoneNumber</MudTd>
        <MudTd>@user.institution.name</MudTd>
    </RowTemplate>
    <CreateForm>
        <UserCreateForm />
    </CreateForm>
    <EditForm>
        <UserEditForm />
    </EditForm>
</Manager>

@code
{
    private bool FilterFunc(User user, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (user.id.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (user.firstName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (user.lastName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (user.RoleAsString.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (user.email.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (user.phoneNumber.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (user.institution.name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
}