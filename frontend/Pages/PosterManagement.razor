@page "/PosterManagement"
@using System
@using MudBlazor
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@inject ISnackbar Snackbar

<style>
    .selected {
        background-color: #1E88E5 !important;
    }

    .selected>td {
        color: white !important;
    }

    .selected>td .mud-input {
        color: white !important;
    }
</style>

<MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
    <MudTabPanel Text="Posters">
        <MudContainer>
            <MudGrid Justify="Justify.Center">
                <MudItem>
                    <MudTable Items="@Posters" Hover="true" RowClassFunc="@SelectedRowClassFunc" @ref="posterMudTable"
                        @onclick="RowClickEvent">
                        <HeaderContent>
                            <MudTh>Name</MudTh>
                            <MudTh>Creator</MudTh>
                            <MudTh>Institution</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd>@context.Name</MudTd>
                            <MudTd>@context.Creator</MudTd>
                            <MudTd>@context.Institution</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudItem>
                <MudItem>
                    <MudForm>
                        <MudCard>
                            <MudCardContent>
                                @if (currentMode == PosterMode.Create)
                                {
                                    <MudForm @ref="form" @bind-IsValid="@success">

                                        <MudTextField T="string" Label="Poster name" Required="true"
                                            RequiredError="Poster name is required!" />

                                        <InputFile id="fileInput112" OnChange="UploadFiles" hidden multiple
                                            accept=".jpg, .jpeg, .png" />

                                        <MudButton HtmlTag="label" Variant="Variant.Filled"
                                            StartIcon="@Icons.Filled.CloudUpload" for="fileInput112">
                                            Upload your image
                                        </MudButton>
                                    </MudForm>
                                }
                                else if (currentMode == PosterMode.Edit)
                                {
                                    <MudForm @ref="form" @bind-IsValid="@success"></MudForm>
                                }
                            </MudCardContent>
                            <MudCardActions>
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)"
                                    Class="ml-auto">Upload poster</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudForm>
                </MudItem>
            </MudGrid>
        </MudContainer>
    </MudTabPanel>
    <MudTabPanel Text="Poster Schedules">
    </MudTabPanel>
</MudTabs>

@code
{
    private PosterMode currentMode { get; set; } = PosterMode.Create;
    private List<Poster> Posters { get; set; } = new List<Poster>();

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        getPosterFromServer();
    }

    private void getPosterFromServer()
    {
        Posters.Add(new Poster("poster 1", "Casper", "AAU"));
        Posters.Add(new Poster("poster 2", "Mads", "AAU"));
        Posters.Add(new Poster("poster 3", "MÃ¸ller", "AAU"));
    }

    private int selectedRowNumber = -1;
    private MudTable<Poster> posterMudTable;

    private string SelectedRowClassFunc(Poster poster, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;
            currentMode = PosterMode.Create;
            return string.Empty;
        }
        else if (posterMudTable.SelectedItem != null && posterMudTable.SelectedItem.Equals(poster))
        {
            selectedRowNumber = rowNumber;
            currentMode = PosterMode.Edit;
            return "selected";
        }
        else
        {
            return string.Empty;
        }

    }

    private void RowClickEvent()
    {

    }


    bool success;
    MudForm form;
    private void UploadFiles(InputFileChangeEventArgs e)
    {
        var entries = e.GetMultipleFiles();
        //Do your validations here
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
        Snackbar.Add($"Files with {entries.FirstOrDefault().Size} bytes size are not allowed", Severity.Error);
        Snackbar.Add($"Files starting with letter {entries.FirstOrDefault().Name.Substring(0, 1)} are not recommended",
        Severity.Warning);
        Snackbar.Add($"This file has the extension {entries.FirstOrDefault().Name.Split(".").Last()}", Severity.Info);

        //TODO upload the files to the server
    }

    enum PosterMode
    {
        Edit,
        Create,
    }
}