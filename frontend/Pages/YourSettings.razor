@page "/YourSettings"
@using MudBlazor
@inject NavigationManager NavigationManager
@inherits ApiComponent



<MudContainer Class="mt-7">
    <MudGrid>
        <MudForm @ref="_localForm">
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.h3" Class="mt-4 mb-4">Your Settings</MudText>
                    <MudText Class="mt-4 mb-4">(Changeing your settings will log you out.)</MudText>
                    <MudTextField Class="mb-2" T="string" @bind-Value="_user.firstName"
                        Label="First Name" Placeholder="_user.firstName">
                    </MudTextField>
                    <MudTextField Class="mb-2" T="string" @bind-Value="_user.lastName"
                        Label="Last Name" Placeholder="_user.lastName">
                    </MudTextField>
                    <MudTextField Class="mb-2" T="string" @bind-Value="_user.email"
                        Label="Email" Placeholder="_user.email">
                    </MudTextField>
                    <MudTextField Class="mb-2" T="string" @bind-Value="_user.phoneNumber"
                        Label="Phonenumber" Placeholder="_user.phoneNumber">
                    </MudTextField>
                    <MudTextField Class="mb-2" T="string" @bind-Value="_user.password"
                        Label="Password" InputType="@PasswordInput" Adornment="Adornment.End"
                        AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ShowOrHidePassword">
                    </MudTextField>
                    <MudTextField Validation="new Func<string, string>(PasswordMatch)"
                        @bind-Value="_confirmedPassword" Label="Confirm password"
                        InputType="@PasswordInput" Adornment="Adornment.End"
                        AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ShowOrHidePassword" />
                    <MudCardActions>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true"
                            @onclick="@OnEditItem" Class="mt-2">Apply changes</MudButton>
                    </MudCardActions>
                </MudCardContent>
            </MudCard>
        </MudForm>
    </MudGrid>
</MudContainer>

@code
{
    private User _user;
    private string _confirmedPassword;
    private bool _passwordIsVisible;
    private MudForm _localForm;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    private string PasswordMatch(string arg)
    {
        if (_user.password != arg)
            return "Passwords don't match";
        return null;
    }

    private void ShowOrHidePassword()
    {
        @if (_passwordIsVisible)
        {
            _passwordIsVisible = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            _passwordIsVisible = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _user = CurrentUserService.User;
    }

    private LoginInformation _loginInformation = new();

    private async Task OnEditItem()
    {
        await RequestHandler<User, User>(HttpMethod.Put, $"/Users/{_user.id}", _user, _localForm, "Information updated");
        CurrentUserService.Logout();
        NavigationManager.NavigateTo("/login");
    }
}