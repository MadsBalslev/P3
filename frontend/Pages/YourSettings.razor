@page "/YourSettings"
@using MudBlazor
@using Shared.Manager
@inherits Shared.Manager.EditForm<User>



<MudContainer Class="mt-7">
    <MudGrid>
        <MudForm @ref="_form">
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.h3" Class="mt-4 mb-4">Your Settings</MudText>
                    <MudTextField Class="mb-2" T="string" @bind-Value="_selectedItem.firstName"
                        Label="First Name" Placeholder="_selectedItem.firstName">
                    </MudTextField>
                    <MudTextField Class="mb-2" T="string" @bind-Value="_selectedItem.lastName"
                        Label="Last Name" Placeholder="_selectedItem.lastName">
                    </MudTextField>
                    <MudTextField Class="mb-2" T="string" @bind-Value="_selectedItem.email"
                        Label="Email" Placeholder="_selectedItem.email">
                    </MudTextField>
                    <MudTextField Class="mb-2" T="string" @bind-Value="_selectedItem.phoneNumber"
                        Label="Phonenumber" Placeholder="_selectedItem.phoneNumber">
                    </MudTextField>
                    <MudTextField Class="mb-2" T="string" @bind-Value="_selectedItem.password"
                        Label="Password" InputType="@PasswordInput" Adornment="Adornment.End"
                        AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ShowOrHidePassword">
                    </MudTextField>
                    <MudTextField Validation="new Func<string, bool>(ValidatePassword)"
                        @bind-Value="_confirmedPassword" Label="Confirm password"
                        InputType="@PasswordInput" Adornment="Adornment.End"
                        AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ShowOrHidePassword" />
                    <MudCardActions>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true"
                            @onclick="@OnEditItem" Class="mt-2">Apply changes</MudButton>
                    </MudCardActions>
                </MudCardContent>
            </MudCard>
        </MudForm>
    </MudGrid>
</MudContainer>

@code
{
    private string _confirmedPassword;
    private bool _passwordIsVisible;
    private MudForm _localForm;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    private bool ValidatePassword(string password)
    {
        return password == _confirmedPassword;
    }

    private void ShowOrHidePassword()
    {
        @if (_passwordIsVisible)
        {
            _passwordIsVisible = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            _passwordIsVisible = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    protected async Task LocalRefreshManager()
    {
        _localForm.Reset();
        _localForm.ResetValidation();
        await ManagerService.RequestRefresh();
    }

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _selectedItem = CurrentUserService.User;
    }
}