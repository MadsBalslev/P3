@page "/InstitutionManagement"
@inject NavigationManager NavManager
@inject AppState AppState
@using frontend.Shared.CreateForms
@using frontend.Shared.Table

<div class="UserContainer">
    <div class="UserView">
        <div class="Btn">
            <button class="btn btn-primary" @onclick="CreateInstitution">Create Institution</button>
        </div>
        <div class="Table">
            <TableTemplate Items="AppState.Institutions" Context="institution">
                <TableHeader>
                    <th>Institution</th>
                    <th>Admin</th>
                    <th></th>
                </TableHeader>
                <RowTemplate>
                    <td>@institution.Navn</td>
                    <td>@institution.Admin</td>
                    <td><a href="/InstitutionManagement/" @onclick="EditInstitution">Edit</a></td>
                </RowTemplate>
            </TableTemplate>
        </div>
    </div>

    <div class="UserManagement">
        @if (CurrentMode == Mode.Initial)
        {
            <h1>Test</h1>
        }
        else if (CurrentMode == Mode.Edit)
        {
            <EditInstitution ></EditInstitution>;
            CurrentMode = Mode.Initial;
        }
        else if (CurrentMode == Mode.Create)
        {
            <CreateInstitution></CreateInstitution>;
          
            CurrentMode = Mode.Initial;
        }
    </div>
</div>

@code
{

    Mode CurrentMode { get; set; } = Mode.Initial;
    enum Mode
    {
        Initial,
        Edit,
        Create
    }



    private void CreateInstitution()
    {
        CurrentMode = Mode.Create;
    }

    private void EditInstitution()
    {
        CurrentMode = Mode.Edit;
    }

    protected override void OnInitialized()
    {
        AppState.OnInstitutionUpdate += StateHasChanged;
    }

    public void Dispose()
    {
        AppState.OnInstitutionUpdate -= StateHasChanged;
    }
}